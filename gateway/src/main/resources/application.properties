# Port on which the service will run
server.port=8080

# Service name
spring.application.name=gateway-service


# Common configurations for all microservices and the gateway
# Add global settings such as server port, logging, etc.

# Define routes for Eng2Hindi microservice
spring.cloud.gateway.routes[0].id=eng2hindi
spring.cloud.gateway.routes[0].uri=lb://eng2hindi-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/tohindi/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Define routes for Eng2French microservice
spring.cloud.gateway.routes[1].id=eng2french
spring.cloud.gateway.routes[1].uri=lb://eng2french-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/tofrench/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# Define routes for Eng2Hebrew microservice
spring.cloud.gateway.routes[1].id=eng2hebrew
spring.cloud.gateway.routes[1].uri=lb://eng2hebrew-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/tohebrew/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# Enable load balancing
spring.cloud.loadbalancer.ribbon.enabled=false
spring.cloud.loadbalancer.ribbon.client.name=eng2hindi-service,eng2french-service,eng2hebrew-service
gateway.metrics.enabled=true

# Eureka Client configuration
eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


#https://github.com/spring-cloud/spring-cloud-gateway/issues/2091
gateway.metrics.enabled=true
discovery.locator.enabled=true
discovery.locator.lower-case-service-id=true
eureka.instance.preferIpAddress=true
eureka.instance.prefer-ip-address=true